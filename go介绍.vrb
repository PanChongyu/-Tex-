\frametitle{Go语言解决现代编程问题：并发}
^^I\begin{block}{通道}
^^I^^I通道是一种数据结构，可以让goroutine之间进行安全的数据通信，可以帮助用户避免共享内存访问的问题。
^^I\end{block}
^^I\quad
^^I并发最复杂的部分是要确保其他的线程不会意外修改用户的数据。在其他语言中如果使用全局变量或者共享内存时，必须使用复杂的锁规则来防止对同一个变量的不同步修改。
^^I\\
^^I\quad
^^I为了解决这个问题，通道提供了一种新模式以保证并发修改时的数据安全。通道这一模式保证同一时刻只有一个goroutine修改数据。两个goroutine之间的通道传输数据是同步的，双方都会确认数据传输完成。
^^I\begin{alertblock}{注意}
^^I^^I通道不提供跨goroutine的数据访问保护机制。如果通道传输的是指向数据的指针时，不同goroutine的读写操作仍需要额外的同步动作。
^^I\end{alertblock}
